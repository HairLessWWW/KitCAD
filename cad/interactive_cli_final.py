from classifier import classify_prompt
from interactive_parser import ask_missing_parameters

def complete_dialog():
    print("üëã –ü—Ä–∏–≤–µ—Ç! –Ø KitCAD –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç. –û–ø–∏—à–∏, —á—Ç–æ —Ö–æ—á–µ—à—å –ø–æ—Å—Ç—Ä–æ–∏—Ç—å.")
    user_text = input("üßæ –í–≤–æ–¥: ").strip()

    classification = classify_prompt(user_text)
    type_ = classification.get("type", "unknown")

    if type_ == "unknown":
        print("‚ö†Ô∏è –ù–µ –ø–æ–Ω—è–ª, —á—Ç–æ –∏–º–µ–Ω–Ω–æ —Ç—ã —Ö–æ—á–µ—à—å –ø–æ—Å—Ç—Ä–æ–∏—Ç—å (–Ω–∞–ø—Ä–∏–º–µ—Ä, –±–æ–ª—Ç, –≥–∞–π–∫–∞, —É–≥–æ–ª–æ–∫, —Ä–µ–¥—É–∫—Ç–æ—Ä...).")
        return

    params_text = user_text
    previous_questions = set()
    loop_counter = 0
    MAX_LOOPS = 5

    while True:
        unanswered = ask_missing_parameters(params_text, type_)
        unanswered_set = set(unanswered)

        if not unanswered:
            print(f"‚úÖ –í—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–æ–±—Ä–∞–Ω—ã. –°–æ—Ö—Ä–∞–Ω—è—é input.txt")
            with open("input.txt", "w", encoding="utf-8") as f:
                f.write(params_text)
            print(f" –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç—Ä–æ–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {params_text}")
            break

        if unanswered_set == previous_questions:
            loop_counter += 1
            if loop_counter >= MAX_LOOPS:
                print("‚ùó –ü–æ—Ö–æ–∂–µ, –æ—Ç–≤–µ—Ç—ã –Ω–µ –ø–æ–º–æ–≥–∞—é—Ç. –ü—Ä–æ–≤–µ—Ä—å —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫–∏ –∏ –ø–æ–ø—Ä–æ–±—É–π –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ.")
                break
        else:
            loop_counter = 0

        previous_questions = unanswered_set
        print(f"
üîç –†–∞—Å–ø–æ–∑–Ω–∞–Ω —Ç–∏–ø: {type_}")
        for question in unanswered:
            print("‚ùì", question)
            answer = input("‚úèÔ∏è  –û—Ç–≤–µ—Ç: ").strip()
            params_text += " " + answer

if __name__ == "__main__":
    complete_dialog()

from classifier import classify_prompt
from interactive_parser import ask_missing_parameters

def complete_dialog():
    print("üëã –ü—Ä–∏–≤–µ—Ç! –Ø KitCAD –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç. –û–ø–∏—à–∏, —á—Ç–æ —Ö–æ—á–µ—à—å –ø–æ—Å—Ç—Ä–æ–∏—Ç—å.")
    user_text = input("üßæ –í–≤–æ–¥: ").strip()

    classification = classify_prompt(user_text)
    type_ = classification.get("type", "unknown")

    if type_ == "unknown":
        print("‚ö†Ô∏è –ù–µ –ø–æ–Ω—è–ª, —á—Ç–æ –∏–º–µ–Ω–Ω–æ —Ç—ã —Ö–æ—á–µ—à—å –ø–æ—Å—Ç—Ä–æ–∏—Ç—å (–±–æ–ª—Ç, –≥–∞–π–∫–∞, —Ä–µ–¥—É–∫—Ç–æ—Ä, —É–≥–æ–ª–æ–∫...). –ü–æ–ø—Ä–æ–±—É–π –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å.")
        return

    params_text = user_text
    unanswered = ask_missing_parameters(user_text, type_)

    while unanswered:
        print(f"üîç –†–∞—Å–ø–æ–∑–Ω–∞–Ω —Ç–∏–ø: {type_}")
        for question in unanswered:
            print("‚ùì", question)
            answer = input("‚úèÔ∏è  –û—Ç–≤–µ—Ç: ").strip()
            params_text += " " + answer

        # –ø–æ–≤—Ç–æ—Ä–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤
        unanswered = ask_missing_parameters(params_text, type_)

    print("‚úÖ –í—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–æ–±—Ä–∞–Ω—ã. –°–æ—Ö—Ä–∞–Ω—è—é input.txt –∏ –∑–∞–ø—É—Å–∫–∞–π –≥–µ–Ω–µ—Ä–∞—Ü–∏—é!")
    with open("input.txt", "w", encoding="utf-8") as f:
        f.write(params_text)
    print(f"\n –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç—Ä–æ–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: \"{params_text}\"")


if __name__ == "__main__":
    complete_dialog()
